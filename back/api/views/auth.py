from http import HTTPStatus

from restless.preparers import FieldsPreparer
from flask import send_from_directory, url_for, redirect, session, request

from api.app import oauth, update_token, delete_token
from api.views import BaseResource


WHOAMI = '/api/users/whoami/'


def root():
    """
    Renders HTML template that bootstraps vue application.

    The template and all static files are generated by the front container and
    are only present when in "production" mode. Otherwise, the front container
    is the development server and proxys API calls to back (this flask
    application).
    """
    return send_from_directory('../templates', 'index.html')


def login():
    # Kick off OAuth2 authorization.
    next = request.args.get('next', '/')
    if oauth.shanty.token:
        session['user'] = oauth.shanty.get(WHOAMI).json()
        return redirect(next)
    session['next'] = next
    redirect_uri = url_for('authorize', _external=True)
    return oauth.shanty.authorize_redirect(redirect_uri, in_fragment=True)


def authorize():
    # Return from OAuth2 Authorization
    next = session.pop('next', '/')
    update_token('shanty', oauth.shanty.authorize_access_token())
    session['user'] = oauth.shanty.get(WHOAMI).json()
    return redirect(next)


def logout():
    next = request.args.get('next', '/')
    session.pop('user', None)
    delete_token('shanty')
    return redirect(next)


class WhoamiResource(BaseResource):
    preparer = FieldsPreparer(fields={
        'username': 'username',
        'email': 'email',
    })

    def detail(self):
        "Details of a particular service."
        return session['user']
